(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.dice3d = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var table;
var initialized = false;

var initialize = function initialize(element) {
  if (!element) {
    table = document.createElement('div');
    table.id = 'dice3d-table';
    document.body.appendChild(table);
  } else {
    table = element;
  }
  initialized = true;
};

var played = false;

var dice3d = function dice3d(options) {
  var faces = options.faces,
      n = options.n,
      callback = options.callback,
      element = options.element;

  if (!initialized) initialize(element);

  if (faces == 6) {
    var sound = document.getElementById('dice3d-sound');

    if (!played || sound.ended) {
      played = true;
      sound.play();
    } else {
      var audio = document.createElement('audio');
      audio.src = sound.src;
      audio.volume = sound.volume;
      setTimeout(function () {
        audio.play();
      }, Math.random() * 500);
    }

    var angle = {
      1: [90, 0],
      2: [0, 90],
      3: [180, 0],
      4: [0, 0],
      5: [0, -90],
      6: [-90, 0]
    }[n];
    var outer = document.createElement('div');
    outer.className = 'dice3d-outer';
    table.appendChild(outer);

    var dice = document.createElement('div');
    dice.className = 'dice3d';
    dice.style.transform = 'rotateX(' + angle[0] + 'deg) rotateZ(' + angle[1] + 'deg)';
    outer.appendChild(dice);

    var getFace = function getFace(pips) {
      var XMLNS = "http://www.w3.org/2000/svg";
      var svg = document.createElementNS(XMLNS, 'svg');
      svg.setAttribute('class', 'dice3d-face');
      svg.setAttribute('width', 32);
      svg.setAttribute('height', 32);

      pips.map(function (pip) {
        var circle = document.createElementNS(XMLNS, 'circle');
        Object.keys(pip).forEach(function (key) {
          return circle.setAttribute(key, pip[key]);
        });
        return circle;
      }).forEach(function (circle) {
        return svg.appendChild(circle);
      });

      return svg;
    };

    [[{ cx: 16, cy: 16, r: 6, fill: 'red' }], [{ cx: 8, cy: 8, r: 3 }, { cx: 24, cy: 24, r: 3 }], [{ cx: 8, cy: 8, r: 3 }, { cx: 16, cy: 16, r: 3 }, { cx: 24, cy: 24, r: 3 }], [{ cx: 8, cy: 8, r: 3 }, { cx: 24, cy: 24, r: 3 }, { cx: 8, cy: 24, r: 3 }, { cx: 24, cy: 8, r: 3 }], [{ cx: 8, cy: 8, r: 3 }, { cx: 16, cy: 16, r: 3 }, { cx: 24, cy: 24, r: 3 }, { cx: 8, cy: 24, r: 3 }, { cx: 24, cy: 8, r: 3 }], [{ cx: 8, cy: 8, r: 3 }, { cx: 24, cy: 24, r: 3 }, { cx: 8, cy: 16, r: 3 }, { cx: 24, cy: 16, r: 3 }, { cx: 8, cy: 24, r: 3 }, { cx: 24, cy: 8, r: 3 }]].map(getFace).forEach(function (face) {
      return dice.appendChild(face);
    });

    setTimeout(function () {
      outer.addEventListener('transitionend', function (e) {
        table.removeChild(this);
        if (callback) {
          callback();
        }
      });
      outer.style.opacity = 0;;
    }, 3 * 1000);
  } else {
    console.error('Unsupported number of faces: ' + faces);
  }
};

module.exports = dice3d;

},{}]},{},[1])(1)
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
